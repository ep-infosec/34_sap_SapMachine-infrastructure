- job:
    name: jenkins-job-generator-trigger
    description: 'This produces a trigger for running the jenkins job generator.'
    project-type: freestyle
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 20
        - github:
            url: 'https://github.com/SAP/SapMachine-Infrastructure.git'
    scm:
        - git:
            url: 'https://github.com/SAP/SapMachine-Infrastructure.git'
            branches:
                - master
            included-regions:
                - 'jenkins-job-generator/.*'
    triggers:
        - pollscm:
            cron: "H/2 * * * *"

- job:
    name: jenkins-job-generator
    description: 'Jenkins Job Generator.'
    project-type: pipeline
    sandbox: true
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 50
        - github:
            url: 'https://github.com/SAP/SapMachine-Infrastructure.git'
        - raw:
            xml: |
                <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
                    <triggers>
                        <jenkins.triggers.ReverseBuildTrigger>
                        <spec></spec>
                        <upstreamProjects>jenkins-job-generator-trigger</upstreamProjects>
                        <threshold>
                            <name>SUCCESS</name>
                            <ordinal>0</ordinal>
                            <color>BLUE</color>
                            <completeBuild>true</completeBuild>
                        </threshold>
                        </jenkins.triggers.ReverseBuildTrigger>
                    </triggers>
                </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
    dsl: |
        pipeline {
            agent {
                label "repository"
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        sh '''#!/bin/bash
                            set -ex
                            git init SapMachine-Infrastructure && cd SapMachine-Infrastructure
                            git fetch --depth 1 https://github.com/SAP/SapMachine-infrastructure.git master
                            git checkout --detach FETCH_HEAD
                        '''
                    }
                }
                stage('Generate Jenkins Jobs') {
                    agent {
                        dockerfile {
                            dir "SapMachine-Infrastructure/dockerfiles/infrastructure"
                            reuseNode true
                            label "repository"
                        }
                    }
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'sapmachine-jenkins', usernameVariable: 'JENKINS_USER', passwordVariable: 'JENKINS_PASSWORD')]) {
                            sh('cd SapMachine-Infrastructure/jenkins-job-generator && jenkins-jobs --conf jenkins_jobs_default.ini --user ${JENKINS_USER} --password ${JENKINS_PASSWORD} update --delete-old ./definitions')
                        }
                    }
                }
            }
            post {
                cleanup {
                    cleanWs deleteDirs: true, disableDeferredWipeout: true
                }
            }
        }

- job:
    name: jenkins-configuration-backup
    description: 'Creates a Jenkins configuration backup.'
    project-type: pipeline
    sandbox: true
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 50
    triggers:
        - timed: "@midnight"
    dsl: |
        pipeline {
            agent {
                node {
                    label 'built-in'
                }
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        sh '''#!/bin/bash
                            set -ex
                            git init --initial-branch=master SapMachine-Infrastructure && cd SapMachine-Infrastructure
                            git fetch --depth 1 https://github.com/SAP/SapMachine-infrastructure.git master
                            git checkout --detach FETCH_HEAD
                        '''
                    }
                }
                stage('Backup') {
                    steps {
                        withCredentials([usernamePassword(credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD')]) {
                            sh('python3 SapMachine-Infrastructure/lib/jenkins_backup.py -s /var/jenkins_home')
                        }
                    }
                }
            }
            post {
                cleanup {
                    cleanWs deleteDirs: true, disableDeferredWipeout: true
                }
            }
        }

- job:
    name: jenkins-configuration-restore
    description: 'Restores a Jenkins configuration backup.'
    project-type: pipeline
    sandbox: true
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 20
    dsl: |
        pipeline {
            agent {
                node {
                    label 'built-in'
                }
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        sh '''#!/bin/bash
                            set -ex
                            git init --initial-branch=master SapMachine-Infrastructure && cd SapMachine-Infrastructure
                            git fetch --depth 1 https://github.com/SAP/SapMachine-infrastructure.git master
                            git checkout --detach FETCH_HEAD
                        '''
                    }
                }
                stage('Backup') {
                    steps {
                        sh('python3 SapMachine-Infrastructure/lib/jenkins_restore.py -t /var/jenkins_home --install-plugins')
                    }
                }
            }
            post {
                cleanup {
                    cleanWs deleteDirs: true, disableDeferredWipeout: true
                }
            }
        }
