- defaults:
    name: 'linux_package_global'
    platforms: &platforms
        - linux_aarch64:
            architecture: linux-aarch64
            debarch: arm64
            docker_agent: |
                agent {{
                    dockerfile {{
                        dir "SapMachine-Infrastructure/dockerfiles/ubuntu_20_04/arm64"
                        reuseNode true
                        label "{platform}"
                        additionalBuildArgs '--build-arg ARTIFACTORY_CREDS=\"$ARTIFACTORY_CREDS\"'
                    }}
                }}
        - linux_ppc64le:
            architecture: linux-ppc64le
            debarch: ppc64el
            docker_agent: |
                agent {{
                    dockerfile {{
                        dir "SapMachine-Infrastructure/dockerfiles/ubuntu_18_04/ppc64le"
                        reuseNode true
                        label "{platform}"
                        additionalBuildArgs '--build-arg ARTIFACTORY_CREDS=\"$ARTIFACTORY_CREDS\"'
                    }}
                }}
        - linux_x86_64:
            architecture: linux-x64
            debarch: amd64
            docker_agent: |
                agent {{
                    dockerfile {{
                        dir "SapMachine-Infrastructure/dockerfiles/ubuntu_18_04/x86_64"
                        reuseNode true
                        label "{platform}"
                        additionalBuildArgs '--build-arg ARTIFACTORY_CREDS=\"$ARTIFACTORY_CREDS\"'
                    }}
                }}

- project:
    name: debian-builds
    platform: *platforms
    jobs:
        - build-debian-package-{platform}

- job-template:
    name: build-debian-package-{platform}
    defaults: 'linux_package_global'
    description: 'Build a debian package for SapMachine on {platform}.'
    project-type: pipeline
    sandbox: true
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 20
            artifact-num-to-keep: 1
    parameters:
        - string:
            name: GIT_TAG_NAME
            default: ''
            description: 'The Git tag to create a debian package from.'
    dsl: |
        pipeline {{
            agent {{
                label "{platform}"
            }}
            environment {{
                ARTIFACTORY_CREDS = credentials('openjdk-artifactory')
            }}
            stages {{
                stage("Checkout Infrastructure Repository") {{
                    steps {{
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }}
                }}
                stage('Build') {{
                    {docker_agent}
                    steps {{
                        // credentials are needed to avoid rate limit exceedance
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD']]) {{
                            sh "python3 SapMachine-Infrastructure/lib/make_deb.py --tag=${{params.GIT_TAG_NAME}} --download --architecture={architecture}"
                        }}
                    }}
                    post {{
                        success {{
                            archiveArtifacts allowEmptyArchive: true, artifacts: "*.deb"
                            stash includes: '*.deb', name: 'debPackage'
                            stash includes: 'SapMachine-Infrastructure/**', name: 'infra'
                        }}
                    }}
                }}
                stage('Publish') {{
                    agent {{
                        label 'agent-local-docker-ubuntu'
                    }}
                    steps {{
                        unstash 'infra'
                        unstash 'debPackage'
                        sh "cp -n *.deb /var/pkg/deb/{debarch} || true"
                        sh "python3 SapMachine-Infrastructure/lib/recreate_deb_repository.py -s -r /var/pkg/deb/{debarch}"
                    }}
                }}
            }}
            post {{
                always {{
                    cleanWs()
                }}
            }}
        }}

- project:
    name: resign-debian-repository
    platform: *platforms
    jobs:
        - resign-debian-repository-{platform}

- job-template:
    name: resign-debian-repository-{platform}
    description: 'Resign debian repository on {platform}.'
    defaults: 'linux_package_global'
    sandbox: true
    project-type: pipeline
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 20
            artifact-num-to-keep: 1
    dsl: |
        pipeline {{
            agent {{
                label 'agent-local-docker-ubuntu'
            }}
            stages {{
                stage("Checkout Infrastructure Repository") {{
                    steps {{
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }}
                }}
                stage('Recreate') {{
                    steps {{
                        sh "python3 SapMachine-Infrastructure/lib/recreate_deb_repository.py -s -r /var/pkg/deb/{debarch}"
                    }}
                }}
            }}
            post {{
                always {{
                    cleanWs deleteDirs: true, disableDeferredWipeout: true
                }}
            }}
        }}

- job:
    name: rpm-package
    description: 'This project is generated. Do not modify manually.'
    project-type: pipeline
    concurrent: false
    properties:
        - build-discarder:
            num-to-keep: 20
            artifact-num-to-keep: 1
    parameters:
        - string:
            name: GIT_TAG_NAME
            default: ''
            description: 'The Git tag to create an rpm package from.'
        - bool:
            name: PUBLISH
            default: '{publish_default}'
            description: 'When set to true, the resulting RPMs will be published to GitHub.'
    dsl: |
        pipeline {
            agent {
                label "linux_x86_64"
            }
            stages {
                stage("Checkout Infrastructure Repository") {
                    steps {
                        checkout changelog: false, poll: false, scm: [$class: 'GitSCM', branches: [[name: '*/master']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'SapMachine-Infrastructure']], userRemoteConfigs: [[credentialsId: 'SapMachine-github', url: 'https://github.com/SAP/SapMachine-infrastructure.git']]]
                    }
                }
                stage('Build') {
                    agent {
                        dockerfile {
                            dir "SapMachine-Infrastructure/dockerfiles/fedora-rpm"
                            reuseNode true
                            label "linux_x86_64"
                        }
                    }
                    steps {
                        sh 'rm -f *.rpm'
                        sh "/usr/bin/python3 SapMachine-Infrastructure/lib/make_rpm.py --tag=${params.GIT_TAG_NAME}"
                    }
                    post {
                        success {
                            archiveArtifacts allowEmptyArchive: true, artifacts: "*.rpm"
                        }
                    }
                }
                stage('Publish') {
                    when {
                        expression { params.PUBLISH == true }
                    }
                    agent {
                        dockerfile {
                            dir "SapMachine-Infrastructure/dockerfiles/infrastructure"
                            reuseNode true
                            label "linux_x86_64"
                        }
                    }
                    steps {
                        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'SapMachine-github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASSWORD']]) {
                            sh "SapMachine-Infrastructure/lib/publish_rpm.sh"
                        }
                    }
                }
            }
            post {
                always {
                    cleanWs deleteDirs: true, disableDeferredWipeout: true
                }
            }
        }
